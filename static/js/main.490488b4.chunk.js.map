{"version":3,"sources":["../../src/Components/StatBox.tsx","../../src/Components/StatRow.tsx","../../src/Components/Skill.tsx","../../src/Components/StatBox2.tsx","../../src/Components/DeathSave.tsx","../../src/Components/AttackTable.tsx","../../src/Components/Currency.tsx","../../src/DnDCharacterStatsSheet.tsx","../../src/Components/Image.tsx","../../src/DnDCharacterProfileSheet.tsx","../../src/Components/SpellTable.tsx","../../src/DnDCharacterSpellSheet.tsx","App.tsx","index.tsx"],"names":["StatBox","props","classes","modifier","isNaN","Number","modifierNum","Math","className","React","type","value","onChange","e","StatRow","Skill","onClick","StatBox2","DeathSave","style","display","AttackTable","getValue","width","key","index","v","updateValue","Currency","initialState","character","DnDCharacterStatsSheet","updateCharacter","oldCharacter","this","newCharacter","Object","getCharacter","state","render","textAlign","textTransform","fontSize","label","name","str","dex","con","wis","cha","inspiration","proficiencyBonus","strSave","checked","strSaveChecked","dexSave","dexSaveChecked","conSave","conSaveChecked","intSave","intSaveChecked","wisSave","wisSaveChecked","chaSave","chaSaveChecked","marginTop","hint","skillAcrobatics","skillAcrobaticsChecked","skillAnimalHandling","skillAnimalHandlingChecked","skillArcana","skillArcanaChecked","skillAthletics","skillAthleticsChecked","skillDeception","skillDeceptionChecked","skillHistory","skillHistoryChecked","skillInsight","skillInsightChecked","skillIntimidation","skillIntimidationChecked","skillInvestigation","skillInvestigationChecked","skillMedicine","skillMedicineChecked","skillNature","skillNatureChecked","skillPerception","skillPerceptionChecked","skillPerformance","skillPerformanceChecked","skillPersuasion","skillPersuasionChecked","skillReligion","skillReligionChecked","skillSlightOfHand","skillSlightOfHandChecked","skillStealth","skillStealthChecked","skillSurvival","skillSurvivalChecked","passivePerception","rows","labelTop","ac","init","speed","borderRadius","marginBottom","paddingBottom","deathsaveSuccesses","deathsaveFailures","attacks","cp","sp","ep","gp","pp","paddingTop","Component","Image","elementId","backgroundImage","document","id","accept","console","event","window","fr","importImage","DnDCharacterProfileSheet","appearance","factionImg","totalNonConsumableMagicItems","SpellTable","slotCount","slots","i1","renderSlotsRemaining","position","left","DnDCharacterSpellsSheet","preparedSpellsTotal","spellSaveDC","spellAttackBonus","level","cantrips","showLabels","slotsName","slotsUsedName","lvl1Spells","slotsValue","lvl1SpellSlotsTotal","slotsUsedValue","lvl1SpellSlotsUsed","lvl2Spells","lvl2SpellSlotsTotal","lvl2SpellSlotsUsed","lvl3Spells","lvl3SpellSlotsTotal","lvl3SpellSlotsUsed","lvl4Spells","lvl4SpellSlotsTotal","lvl4SpellSlotsUsed","lvl5Spells","lvl5SpellSlotsTotal","lvl5SpellSlotsUsed","lvl6Spells","lvl6SpellSlotsTotal","lvl6SpellSlotsUsed","lvl7Spells","lvl7SpellSlotsTotal","lvl7SpellSlotsUsed","lvl8Spells","lvl8SpellSlotsTotal","lvl8SpellSlotsUsed","lvl9Spells","lvl9SpellSlotsTotal","lvl9SpellSlotsUsed","ScrollToTop","pathname","useLocation","useEffect","scrollTo","withRouter","useState","lsData","localStorage","getItem","JSON","parse","loadDefaultCharacter","setCharacter","navTop","setNavTop","pageYOffset","prevScrollpos","setPrevScrollpos","setLoading","search","characterToLoad","qs","ignoreQueryPrefix","axios","get","then","response","Array","isArray","data","Error","log","catch","error","statsSheet","onCharacterChanged","profileSheet","spellSheet","setItem","stringify","importCharacter","target","files","length","FileReader","onload","result","json","alert","loadCharacter","readAsText","onscroll","currentScrollPos","onScroll","backgroundColor","top","data-toggle","data-target","aria-controls","aria-expanded","aria-label","location","to","a","createElement","file","Blob","href","URL","createObjectURL","download","replace","toLowerCase","click","exportCharacter","getElementById","print","exact","path","defaultRedirect","innerWidth","getDefaultRedirect","ReactDOM","basename"],"mappings":"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","file":"static/js/main.490488b4.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction StatBox(props: {\r\n  classes?: string\r\n  value: string | number | readonly string[] | undefined\r\n  label: React.ReactNode\r\n  onChange: (arg0: any, arg1: string) => void\r\n  name: any\r\n}) {\r\n  let classes = 'd-and-d-statbox'\r\n  if (props.classes) {\r\n    classes += ' ' + props.classes\r\n  }\r\n\r\n  let modifier: string = ''\r\n  if (props.value && !isNaN(Number(props.value))) {\r\n    const modifierNum = Math.floor((Number(props.value) - 10) / 2)\r\n    if (modifierNum > 0) {\r\n      modifier = '+' + modifierNum\r\n    } else {\r\n      modifier = modifierNum.toString()\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes}>\r\n        <label>{props.label}</label>\r\n        <div className='d-and-d-statbox-modifier'>{modifier}</div>\r\n      </div>\r\n      <div className='d-and-d-statbox-value'>\r\n        <input\r\n          type='text'\r\n          value={props.value ? props.value : ''}\r\n          onChange={(e) => props.onChange(props.name, e.target.value)}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default StatBox\r\n","import React from 'react'\r\n\r\nfunction StatRow(props: {\r\n  classes?: string\r\n  value: string | number | readonly string[] | undefined\r\n  onChange: (arg0: any, arg1: string) => void\r\n  name: any\r\n  label: React.ReactNode\r\n}) {\r\n  let classes = 'd-and-d-statrow'\r\n  if (props.classes) {\r\n    classes += ' ' + props.classes\r\n  }\r\n\r\n  return (\r\n    <div className={classes}>\r\n      <div className='d-and-d-statrow-value'>\r\n        <input\r\n          type='text'\r\n          value={props.value ? props.value : ''}\r\n          onChange={(e) => props.onChange(props.name, e.target.value)}\r\n        />\r\n      </div>\r\n      <div className='d-and-d-statrow-label'>\r\n        <label>{props.label}</label>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default StatRow\r\n","import React from 'react'\r\n\r\nfunction Skill(props: {\r\n  classes?: string\r\n  checked?: boolean\r\n  onChange: (arg0: string, arg1: string | boolean) => void\r\n  name: string\r\n  value: string | number | readonly string[] | undefined\r\n  label?: React.ReactNode\r\n  hint?: React.ReactNode\r\n}) {\r\n  let classes = 'd-and-d-skill'\r\n  if (props.classes) {\r\n    classes += ' ' + props.classes\r\n  }\r\n\r\n  return (\r\n    <div className={classes}>\r\n      <div\r\n        className={\r\n          props.checked ? 'd-and-d-skill-circle active' : 'd-and-d-skill-circle'\r\n        }\r\n        onClick={() => props.onChange(props.name + 'Checked', !props.checked)}\r\n      />\r\n      <input\r\n        type='text'\r\n        value={props.value ? props.value : ''}\r\n        onChange={(e) => props.onChange(props.name, e.target.value)}\r\n      />\r\n      <label>{props.label}</label>\r\n      {props.hint ? (\r\n        <span className='d-and-d-skill-hint'>{props.hint}</span>\r\n      ) : null}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Skill\r\n","import React from 'react'\r\n\r\nfunction StatBox2(props: {\r\n  classes?: string\r\n  value: string | number | readonly string[] | undefined\r\n  onChange: (arg0: any, arg1: string) => void\r\n  name: any\r\n  labelTop?: {} | null | undefined\r\n  label?: React.ReactNode\r\n}) {\r\n  let classes = 'd-and-d-statbox type2'\r\n  if (props.classes) {\r\n    classes += ' ' + props.classes\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes}>\r\n        <div className='d-and-d-statbox-modifier'>\r\n          <input\r\n            type='text'\r\n            value={props.value ? props.value : ''}\r\n            onChange={(e) => props.onChange(props.name, e.target.value)}\r\n          />\r\n        </div>\r\n        {props.labelTop != null ? (\r\n          <div>\r\n            <label className='label-top'>{props.labelTop}</label>\r\n          </div>\r\n        ) : null}\r\n        {props.label != null ? (\r\n          <div>\r\n            <label>{props.label}</label>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default StatBox2\r\n","import React from 'react'\r\n\r\nfunction DeathSave(props: {\r\n  classes?: string\r\n  label: React.ReactNode\r\n  value?: number\r\n  onChange: (arg0: any, arg1: number | null) => void\r\n  name: any\r\n}) {\r\n  let classes = 'd-and-d-deathsave'\r\n  if (props.classes) {\r\n    classes += ' ' + props.classes\r\n  }\r\n\r\n  return (\r\n    <div className={classes}>\r\n      <label>{props.label}</label>\r\n      <div style={{ display: 'inline-block' }}>\r\n        <div\r\n          className={\r\n            props.value && props.value >= 1\r\n              ? 'd-and-d-skill-circle active'\r\n              : 'd-and-d-skill-circle'\r\n          }\r\n          onClick={() =>\r\n            props.onChange(props.name, props.value === 1 ? null : 1)\r\n          }\r\n        />\r\n        =\r\n        <div\r\n          className={\r\n            props.value && props.value >= 2\r\n              ? 'd-and-d-skill-circle active'\r\n              : 'd-and-d-skill-circle'\r\n          }\r\n          onClick={() =>\r\n            props.onChange(props.name, props.value === 2 ? null : 2)\r\n          }\r\n        />\r\n        =\r\n        <div\r\n          className={\r\n            props.value && props.value >= 3\r\n              ? 'd-and-d-skill-circle active'\r\n              : 'd-and-d-skill-circle'\r\n          }\r\n          onClick={() =>\r\n            props.onChange(props.name, props.value === 3 ? null : 3)\r\n          }\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DeathSave\r\n","import React from 'react'\r\n\r\nfunction AttackTable(props: {\r\n  onChange: (arg0: any, arg1: any) => void\r\n  name: string\r\n  value?: any\r\n  classes?: string\r\n  rows: number\r\n}) {\r\n  function updateValue(index: React.Key, field: string, v: string) {\r\n    const value = getValue().slice()\r\n    value[index][field] = v\r\n    props.onChange(props.name, value)\r\n  }\r\n\r\n  function getValue() {\r\n    let value = props.value\r\n    if (!value) {\r\n      value = []\r\n    }\r\n    while (value.length < props.rows) {\r\n      value.push({})\r\n    }\r\n    return value\r\n  }\r\n\r\n  let classes = 'd-and-d-table'\r\n  if (props.classes) {\r\n    classes += ' ' + props.classes\r\n  }\r\n\r\n  return (\r\n    <table className={classes}>\r\n      <thead>\r\n        <tr>\r\n          <th>Название</th>\r\n          <th style={{ width: '70px' }}>Бонус атаки</th>\r\n          <th>Урон/Тип</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {getValue().map(\r\n          (\r\n            v: {\r\n              name: string | number | readonly string[] | undefined\r\n              bonus: string | number | readonly string[] | undefined\r\n              damage: string | number | readonly string[] | undefined\r\n            },\r\n            index: string\r\n          ) => {\r\n            return (\r\n              <tr key={'d-and-d-table-row-' + props.name + index}>\r\n                <td>\r\n                  <input\r\n                    type='text'\r\n                    value={v.name ? v.name : ''}\r\n                    onChange={(e) => updateValue(index, 'name', e.target.value)}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    type='text'\r\n                    value={v.bonus ? v.bonus : ''}\r\n                    onChange={(e) =>\r\n                      updateValue(index, 'bonus', e.target.value)\r\n                    }\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    type='text'\r\n                    value={v.damage ? v.damage : ''}\r\n                    onChange={(e) =>\r\n                      updateValue(index, 'damage', e.target.value)\r\n                    }\r\n                  />\r\n                </td>\r\n              </tr>\r\n            )\r\n          }\r\n        )}\r\n      </tbody>\r\n    </table>\r\n  )\r\n}\r\n\r\nexport default AttackTable\r\n","import React from 'react'\r\n\r\nfunction Currency(props: {\r\n  classes?: string\r\n  label: React.ReactNode\r\n  value: string | number | readonly string[] | undefined\r\n  onChange: (arg0: any, arg1: string) => void\r\n  name: any\r\n}) {\r\n  let classes = 'd-and-d-currency'\r\n  if (props.classes) {\r\n    classes += ' ' + props.classes\r\n  }\r\n\r\n  return (\r\n    <div className={classes}>\r\n      <div className='d-and-d-currency-label'>\r\n        <label>{props.label}</label>\r\n      </div>\r\n      <div className='d-and-d-currency-value'>\r\n        <input\r\n          type='text'\r\n          value={props.value ? props.value : ''}\r\n          onChange={(e) => props.onChange(props.name, e.target.value)}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Currency\r\n","import React from 'react'\r\n\r\n// eslint-disable-next-line no-unused-vars\r\nimport DnDCharacter from './DnDCharacter'\r\n\r\nimport Statbox from './Components/StatBox'\r\nimport StatRow from './Components/StatRow'\r\nimport Skill from './Components/Skill'\r\nimport StatBox2 from './Components/StatBox2'\r\nimport DeathSave from './Components/DeathSave'\r\nimport AttackTable from './Components/AttackTable'\r\nimport Currency from './Components/Currency'\r\n\r\nimport './dndstyles.css'\r\n\r\ninterface IDnDCharacterStatsSheetProps {\r\n  character?: DnDCharacter\r\n  defaultCharacter?: DnDCharacter\r\n  onCharacterChanged?: (\r\n    character: DnDCharacter,\r\n    changedField: string,\r\n    newValue: any\r\n  ) => void\r\n}\r\n\r\ninterface IDnDCharacterStatsSheetState {\r\n  character: DnDCharacter\r\n}\r\n\r\nconst initialState: IDnDCharacterStatsSheetState = {\r\n  character: {}\r\n}\r\n\r\nclass DnDCharacterStatsSheet extends React.Component<\r\n  IDnDCharacterStatsSheetProps,\r\n  IDnDCharacterStatsSheetState\r\n> {\r\n  constructor(props: IDnDCharacterStatsSheetProps) {\r\n    super(props)\r\n    if (props.defaultCharacter) {\r\n      initialState.character = props.defaultCharacter\r\n    }\r\n    this.state = initialState\r\n  }\r\n\r\n  updateCharacter(name: string, value: any) {\r\n    const oldCharacter = this.getCharacter()\r\n    const newCharacter: DnDCharacter = {}\r\n    Object.assign(newCharacter, oldCharacter)\r\n    newCharacter[name] = value\r\n\r\n    if (!this.props.character) {\r\n      // NOT CONTROLLED\r\n      this.setState({ character: newCharacter })\r\n    }\r\n\r\n    if (typeof this.props.onCharacterChanged === 'function') {\r\n      this.props.onCharacterChanged(newCharacter, name, value)\r\n    }\r\n  }\r\n\r\n  getCharacter() {\r\n    // NOT CONTROLLED\r\n    let character = this.state.character\r\n    if (this.props.character) {\r\n      // CONTROLLED\r\n      character = this.props.character\r\n    }\r\n    return character\r\n  }\r\n\r\n  render() {\r\n    const character = this.getCharacter()\r\n\r\n    return (\r\n      <div className='d-and-d-character-sheet container-xl mt-5 mb-5'>\r\n        <div>\r\n          <div className='row mb-4'>\r\n            <div className='col-md-3 pr-2 pl-2'>\r\n              <div className='d-and-d-page-title'>D&D</div>\r\n              <div className='d-and-d-attribute-collection char-name pr-3 pl-3'>\r\n                <input\r\n                  type='text'\r\n                  value={character.name ? character.name : ''}\r\n                  onChange={(e) => this.updateCharacter('name', e.target.value)}\r\n                />\r\n              </div>\r\n              <label\r\n                style={{\r\n                  width: '100%',\r\n                  textAlign: 'right',\r\n                  textTransform: 'uppercase',\r\n                  fontSize: '11px'\r\n                }}\r\n              >\r\n                Имя персонажа\r\n              </label>\r\n            </div>\r\n            <div className='col-md-9 pr-2 pl-2'>\r\n              <div className='d-and-d-attribute-collection pr-3 pl-3'>\r\n                <div className='row pl-3 pr-3'>\r\n                  <div className='col-md-3 col-6 pl-0 pr-0'>\r\n                    <input\r\n                      type='text'\r\n                      value={character.classLevel ? character.classLevel : ''}\r\n                      onChange={(e) =>\r\n                        this.updateCharacter('classLevel', e.target.value)\r\n                      }\r\n                    />\r\n                    <label>Класс и уровень</label>\r\n                  </div>\r\n                  <div className='col-md-3 col-6 pl-0 pr-0'>\r\n                    <input\r\n                      type='text'\r\n                      value={character.background ? character.background : ''}\r\n                      onChange={(e) =>\r\n                        this.updateCharacter('background', e.target.value)\r\n                      }\r\n                    />\r\n                    <label>Предыстория</label>\r\n                  </div>\r\n                  <div className='col-md-3 col-6 pl-0 pr-0'>\r\n                    <input\r\n                      type='text'\r\n                      value={character.playerName ? character.playerName : ''}\r\n                      onChange={(e) =>\r\n                        this.updateCharacter('playerName', e.target.value)\r\n                      }\r\n                    />\r\n                    <label>Имя игрока</label>\r\n                  </div>\r\n                  <div className='col-md-3 col-6 pl-0 pr-0'>\r\n                    <input\r\n                      type='text'\r\n                      value={character.faction ? character.faction : ''}\r\n                      onChange={(e) =>\r\n                        this.updateCharacter('faction', e.target.value)\r\n                      }\r\n                    />\r\n                    <label>Фракция</label>\r\n                  </div>\r\n                </div>\r\n                <div className='row pl-3 pr-3'>\r\n                  <div className='col-md-3 col-6 pl-0 pr-0'>\r\n                    <input\r\n                      type='text'\r\n                      value={character.race ? character.race : ''}\r\n                      onChange={(e) =>\r\n                        this.updateCharacter('race', e.target.value)\r\n                      }\r\n                    />\r\n                    <label>Раса</label>\r\n                  </div>\r\n                  <div className='col-md-3 col-6 pl-0 pr-0'>\r\n                    <input\r\n                      type='text'\r\n                      value={character.alignment ? character.alignment : ''}\r\n                      onChange={(e) =>\r\n                        this.updateCharacter('alignment', e.target.value)\r\n                      }\r\n                    />\r\n                    <label>Мировозрение</label>\r\n                  </div>\r\n                  <div className='col-md-3 col-6 pl-0 pr-0'>\r\n                    <input\r\n                      type='text'\r\n                      value={character.xp ? character.xp : ''}\r\n                      onChange={(e) =>\r\n                        this.updateCharacter('xp', e.target.value)\r\n                      }\r\n                    />\r\n                    <label>Очки опыта</label>\r\n                  </div>\r\n                  <div className='col-md-3 col-6 pl-0 pr-0'>\r\n                    <input\r\n                      type='text'\r\n                      value={character.dciNo ? character.dciNo : ''}\r\n                      onChange={(e) =>\r\n                        this.updateCharacter('dciNo', e.target.value)\r\n                      }\r\n                    />\r\n                    <label>DCI Number</label>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className='row'>\r\n            <div className='col-md-4'>\r\n              <div className='row'>\r\n                <div className='col-4 pr-1'>\r\n                  <div className='d-and-d-box gray'>\r\n                    <Statbox\r\n                      label='Сила'\r\n                      name='str'\r\n                      value={character.str}\r\n                      onChange={(name: string, value: any) => {\r\n                        this.updateCharacter(name, value)\r\n                      }}\r\n                    />\r\n                    <Statbox\r\n                      label='Ловкость'\r\n                      name='dex'\r\n                      value={character.dex}\r\n                      onChange={(name: string, value: any) => {\r\n                        this.updateCharacter(name, value)\r\n                      }}\r\n                    />\r\n                    <Statbox\r\n                      label='Телосложение'\r\n                      name='con'\r\n                      value={character.con}\r\n                      onChange={(name: string, value: any) => {\r\n                        this.updateCharacter(name, value)\r\n                      }}\r\n                    />\r\n                    <Statbox\r\n                      label='Интеллект'\r\n                      name='int'\r\n                      value={character.int}\r\n                      onChange={(name: string, value: any) => {\r\n                        this.updateCharacter(name, value)\r\n                      }}\r\n                    />\r\n                    <Statbox\r\n                      label='Мудрость'\r\n                      name='wis'\r\n                      value={character.wis}\r\n                      onChange={(name: string, value: any) => {\r\n                        this.updateCharacter(name, value)\r\n                      }}\r\n                    />\r\n                    <Statbox\r\n                      label='Харизма'\r\n                      name='cha'\r\n                      value={character.cha}\r\n                      onChange={(name: string, value: any) => {\r\n                        this.updateCharacter(name, value)\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className='col-8'>\r\n                  <StatRow\r\n                    label='Вдохновение'\r\n                    name='inspiration'\r\n                    value={character.inspiration}\r\n                    onChange={(name: string, value: any) => {\r\n                      this.updateCharacter(name, value)\r\n                    }}\r\n                  />\r\n                  <StatRow\r\n                    classes='rounded'\r\n                    label='Бонус мастерства'\r\n                    name='proficiencyBonus'\r\n                    value={character.proficiencyBonus}\r\n                    onChange={(name: string, value: any) => {\r\n                      this.updateCharacter(name, value)\r\n                    }}\r\n                  />\r\n                  <div className='d-and-d-box'>\r\n                    <div style={{ textAlign: 'left' }}>\r\n                      <Skill\r\n                        label='Сила'\r\n                        name='strSave'\r\n                        value={character.strSave}\r\n                        checked={character.strSaveChecked}\r\n                        onChange={(name: string, value: any) => {\r\n                          this.updateCharacter(name, value)\r\n                        }}\r\n                      />\r\n                      <Skill\r\n                        label='Ловкость'\r\n                        name='dexSave'\r\n                        value={character.dexSave}\r\n                        checked={character.dexSaveChecked}\r\n                        onChange={(name: string, value: any) => {\r\n                          this.updateCharacter(name, value)\r\n                        }}\r\n                      />\r\n                      <Skill\r\n                        label='Телосложение'\r\n                        name='conSave'\r\n                        value={character.conSave}\r\n                        checked={character.conSaveChecked}\r\n                        onChange={(name: string, value: any) => {\r\n                          this.updateCharacter(name, value)\r\n                        }}\r\n                      />\r\n                      <Skill\r\n                        label='Интеллект'\r\n                        name='intSave'\r\n                        value={character.intSave}\r\n                        checked={character.intSaveChecked}\r\n                        onChange={(name: string, value: any) => {\r\n                          this.updateCharacter(name, value)\r\n                        }}\r\n                      />\r\n                      <Skill\r\n                        label='Мудрость'\r\n                        name='wisSave'\r\n                        value={character.wisSave}\r\n                        checked={character.wisSaveChecked}\r\n                        onChange={(name: string, value: any) => {\r\n                          this.updateCharacter(name, value)\r\n                        }}\r\n                      />\r\n                      <Skill\r\n                        label='Харизма'\r\n                        name='chaSave'\r\n                        value={character.chaSave}\r\n                        checked={character.chaSaveChecked}\r\n                        onChange={(name: string, value: any) => {\r\n                          this.updateCharacter(name, value)\r\n                        }}\r\n                      />\r\n                    </div>\r\n                    <label\r\n                      className='d-and-d-title'\r\n                      style={{ marginTop: '10px' }}\r\n                    >\r\n                      Спасброски\r\n                    </label>\r\n                  </div>\r\n                  <div className='d-and-d-box'>\r\n                    <div style={{ textAlign: 'left' }}>\r\n                      <Skill\r\n                        label='Акробатика'\r\n                        hint='(Dex)'\r\n                        name='skillAcrobatics'\r\n                        value={character.skillAcrobatics}\r\n                        checked={character.skillAcrobaticsChecked}\r\n                        onChange={(name: string, value: any) => {\r\n                          this.updateCharacter(name, value)\r\n                        }}\r\n                      />\r\n                      <Skill\r\n                        label='Уход за животными'\r\n                        hint='(Wis)'\r\n                        name='skillAnimalHandling'\r\n                        value={character.skillAnimalHandling}\r\n                        checked={character.skillAnimalHandlingChecked}\r\n                        onChange={(name: string, value: any) => {\r\n                          this.updateCharacter(name, value)\r\n                        }}\r\n                      />\r\n                      <Skill\r\n                        label='Магия'\r\n                        hint='(Int)'\r\n                        name='skillArcana'\r\n                        value={character.skillArcana}\r\n                        checked={character.skillArcanaChecked}\r\n                        onChange={(name: string, value: any) => {\r\n                          this.updateCharacter(name, value)\r\n                        }}\r\n                      />\r\n                      <Skill\r\n                        label='Атлетика'\r\n                        hint='(Str)'\r\n                        name='skillAthletics'\r\n                        value={character.skillAthletics}\r\n                        checked={character.skillAthleticsChecked}\r\n                        onChange={(name: string, value: any) => {\r\n                          this.updateCharacter(name, value)\r\n                        }}\r\n                      />\r\n                      <Skill\r\n                        label='Обман'\r\n                        hint='(Cha)'\r\n                        name='skillDeception'\r\n                        value={character.skillDeception}\r\n                        checked={character.skillDeceptionChecked}\r\n                        onChange={(name: string, value: any) => {\r\n                          this.updateCharacter(name, value)\r\n                        }}\r\n                      />\r\n                      <Skill\r\n                        label='История'\r\n                        hint='(Int)'\r\n                        name='skillHistory'\r\n                        value={character.skillHistory}\r\n                        checked={character.skillHistoryChecked}\r\n                        onChange={(name: string, value: any) => {\r\n                          this.updateCharacter(name, value)\r\n                        }}\r\n                      />\r\n                      <Skill\r\n                        label='Проницательность'\r\n                        hint='(Wis)'\r\n                        name='skillInsight'\r\n                        value={character.skillInsight}\r\n                        checked={character.skillInsightChecked}\r\n                        onChange={(name: string, value: any) => {\r\n                          this.updateCharacter(name, value)\r\n                        }}\r\n                      />\r\n                      <Skill\r\n                        label='Запугивание'\r\n                        hint='(Cha)'\r\n                        name='skillIntimidation'\r\n                        value={character.skillIntimidation}\r\n                        checked={character.skillIntimidationChecked}\r\n                        onChange={(name: string, value: any) => {\r\n                          this.updateCharacter(name, value)\r\n                        }}\r\n                      />\r\n                      <Skill\r\n                        label='Анализ'\r\n                        hint='(Int)'\r\n                        name='skillInvestigation'\r\n                        value={character.skillInvestigation}\r\n                        checked={character.skillInvestigationChecked}\r\n                        onChange={(name: string, value: any) => {\r\n                          this.updateCharacter(name, value)\r\n                        }}\r\n                      />\r\n                      <Skill\r\n                        label='Медицина'\r\n                        hint='(Wis)'\r\n                        name='skillMedicine'\r\n                        value={character.skillMedicine}\r\n                        checked={character.skillMedicineChecked}\r\n                        onChange={(name: string, value: any) => {\r\n                          this.updateCharacter(name, value)\r\n                        }}\r\n                      />\r\n                      <Skill\r\n                        label='Природа'\r\n                        hint='(Int)'\r\n                        name='skillNature'\r\n                        value={character.skillNature}\r\n                        checked={character.skillNatureChecked}\r\n                        onChange={(name: string, value: any) => {\r\n                          this.updateCharacter(name, value)\r\n                        }}\r\n                      />\r\n                      <Skill\r\n                        label='Восприятие'\r\n                        hint='(Wis)'\r\n                        name='skillPerception'\r\n                        value={character.skillPerception}\r\n                        checked={character.skillPerceptionChecked}\r\n                        onChange={(name: string, value: any) => {\r\n                          this.updateCharacter(name, value)\r\n                        }}\r\n                      />\r\n                      <Skill\r\n                        label='Выступление'\r\n                        hint='(Cha)'\r\n                        name='skillPerformance'\r\n                        value={character.skillPerformance}\r\n                        checked={character.skillPerformanceChecked}\r\n                        onChange={(name: string, value: any) => {\r\n                          this.updateCharacter(name, value)\r\n                        }}\r\n                      />\r\n                      <Skill\r\n                        label='Убеждение'\r\n                        hint='(Cha)'\r\n                        name='skillPersuasion'\r\n                        value={character.skillPersuasion}\r\n                        checked={character.skillPersuasionChecked}\r\n                        onChange={(name: string, value: any) => {\r\n                          this.updateCharacter(name, value)\r\n                        }}\r\n                      />\r\n                      <Skill\r\n                        label='Религия'\r\n                        hint='(Int)'\r\n                        name='skillReligion'\r\n                        value={character.skillReligion}\r\n                        checked={character.skillReligionChecked}\r\n                        onChange={(name: string, value: any) => {\r\n                          this.updateCharacter(name, value)\r\n                        }}\r\n                      />\r\n                      <Skill\r\n                        label='Ловкость рук'\r\n                        hint='(Dex)'\r\n                        name='skillSlightOfHand'\r\n                        value={character.skillSlightOfHand}\r\n                        checked={character.skillSlightOfHandChecked}\r\n                        onChange={(name: string, value: any) => {\r\n                          this.updateCharacter(name, value)\r\n                        }}\r\n                      />\r\n                      <Skill\r\n                        label='Скрытность'\r\n                        hint='(Dex)'\r\n                        name='skillStealth'\r\n                        value={character.skillStealth}\r\n                        checked={character.skillStealthChecked}\r\n                        onChange={(name: string, value: any) => {\r\n                          this.updateCharacter(name, value)\r\n                        }}\r\n                      />\r\n                      <Skill\r\n                        label='Выживание'\r\n                        hint='(Wis)'\r\n                        name='skillSurvival'\r\n                        value={character.skillSurvival}\r\n                        checked={character.skillSurvivalChecked}\r\n                        onChange={(name: string, value: any) => {\r\n                          this.updateCharacter(name, value)\r\n                        }}\r\n                      />\r\n                    </div>\r\n                    <label\r\n                      className='d-and-d-title'\r\n                      style={{ marginTop: '10px' }}\r\n                    >\r\n                      Навыки\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className='mt-2'>\r\n                <StatRow\r\n                  classes='rounded rounded-sides'\r\n                  label='Пассивная мудрость (внимательность)'\r\n                  name='passivePerception'\r\n                  value={character.passivePerception}\r\n                  onChange={(name: string, value: any) => {\r\n                    this.updateCharacter(name, value)\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className='d-and-d-box mt-4'>\r\n                <textarea\r\n                  value={\r\n                    character.otherProficiencies\r\n                      ? character.otherProficiencies\r\n                      : ''\r\n                  }\r\n                  onChange={(e) =>\r\n                    this.updateCharacter('otherProficiencies', e.target.value)\r\n                  }\r\n                  rows={12}\r\n                />\r\n                <label className='d-and-d-title' style={{ marginTop: '10px' }}>\r\n                  Прочие навыки и языки\r\n                </label>\r\n              </div>\r\n            </div>\r\n\r\n            <div className='col-md-4'>\r\n              <div className='d-and-d-box gray'>\r\n                <div className='row'>\r\n                  <div className='col-4 pr-2'>\r\n                    <StatBox2\r\n                      classes='shield'\r\n                      labelTop='Класс'\r\n                      label='Защиты'\r\n                      name='ac'\r\n                      value={character.ac}\r\n                      onChange={(name: string, value: any) => {\r\n                        this.updateCharacter(name, value)\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <div className='col-4 pr-2 pl-2'>\r\n                    <StatBox2\r\n                      label='Инициатива'\r\n                      name='init'\r\n                      value={character.init}\r\n                      onChange={(name: string, value: any) => {\r\n                        this.updateCharacter(name, value)\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <div className='col-4 pl-2'>\r\n                    <StatBox2\r\n                      label='Скорость'\r\n                      name='speed'\r\n                      value={character.speed}\r\n                      onChange={(name: string, value: any) => {\r\n                        this.updateCharacter(name, value)\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                <div\r\n                  className='d-and-d-box white'\r\n                  style={{\r\n                    borderRadius: '8px 8px 0 0',\r\n                    marginBottom: '5px',\r\n                    paddingBottom: '5px'\r\n                  }}\r\n                >\r\n                  <div className='d-and-d-gray-text'>\r\n                    <label style={{ width: '95px' }}>Hit Point Maximum</label>\r\n                    <input\r\n                      type='text'\r\n                      style={{ width: 'calc(100% - 95px)' }}\r\n                      className='d-and-d-linput'\r\n                      value={character.maxHp ? character.maxHp : ''}\r\n                      onChange={(e) =>\r\n                        this.updateCharacter('maxHp', e.target.value)\r\n                      }\r\n                    />\r\n                  </div>\r\n                  <input\r\n                    type='text'\r\n                    className='d-and-d-cinput'\r\n                    value={character.hp ? character.hp : ''}\r\n                    onChange={(e) => this.updateCharacter('hp', e.target.value)}\r\n                  />\r\n                  <label className='d-and-d-title' style={{ marginTop: '5px' }}>\r\n                    Текущий запас здоровья\r\n                  </label>\r\n                </div>\r\n                <div\r\n                  className='d-and-d-box white mb-2'\r\n                  style={{ borderRadius: '0 0 8px 8px', paddingBottom: '5px' }}\r\n                >\r\n                  <input\r\n                    type='text'\r\n                    className='d-and-d-cinput'\r\n                    value={character.tempHp ? character.tempHp : ''}\r\n                    onChange={(e) =>\r\n                      this.updateCharacter('tempHp', e.target.value)\r\n                    }\r\n                  />\r\n                  <label className='d-and-d-title' style={{ marginTop: '5px' }}>\r\n                    Временный уровень здоровья\r\n                  </label>\r\n                </div>\r\n\r\n                <div className='row mt-1'>\r\n                  <div className='col-6 pr-1'>\r\n                    <div\r\n                      className='d-and-d-box white mb-0'\r\n                      style={{ paddingBottom: '5px' }}\r\n                    >\r\n                      <div className='d-and-d-gray-text'>\r\n                        <label style={{ width: '25px' }}>Всего</label>\r\n                        <input\r\n                          type='text'\r\n                          style={{ width: 'calc(100% - 25px)' }}\r\n                          className='d-and-d-linput'\r\n                          value={\r\n                            character.hitDiceMax ? character.hitDiceMax : ''\r\n                          }\r\n                          onChange={(e) =>\r\n                            this.updateCharacter('hitDiceMax', e.target.value)\r\n                          }\r\n                        />\r\n                      </div>\r\n                      <input\r\n                        type='text'\r\n                        className='d-and-d-cinput'\r\n                        value={character.hitDice ? character.hitDice : ''}\r\n                        onChange={(e) =>\r\n                          this.updateCharacter('hitDice', e.target.value)\r\n                        }\r\n                      />\r\n                      <label\r\n                        className='d-and-d-title'\r\n                        style={{ marginTop: '5px' }}\r\n                      >\r\n                        Кости здоровья\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                  <div className='col-6 pl-1'>\r\n                    <div\r\n                      className='d-and-d-box white mb-0'\r\n                      style={{ paddingBottom: '5px' }}\r\n                    >\r\n                      <DeathSave\r\n                        classes='d-and-d-save-success'\r\n                        label='Успехи'\r\n                        name='deathsaveSuccesses'\r\n                        value={character.deathsaveSuccesses}\r\n                        onChange={(name: string, value: any) => {\r\n                          this.updateCharacter(name, value)\r\n                        }}\r\n                      />\r\n                      <DeathSave\r\n                        classes='d-and-d-save-failure'\r\n                        label='Провалы'\r\n                        name='deathsaveFailures'\r\n                        value={character.deathsaveFailures}\r\n                        onChange={(name: string, value: any) => {\r\n                          this.updateCharacter(name, value)\r\n                        }}\r\n                      />\r\n                      <label\r\n                        className='d-and-d-title'\r\n                        style={{ marginTop: '6px' }}\r\n                      >\r\n                        Спасброски от смерти\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className='d-and-d-box mt-3'>\r\n                <AttackTable\r\n                  rows={3}\r\n                  name='attacks'\r\n                  value={character.attacks}\r\n                  onChange={(name: string, value: any) => {\r\n                    this.updateCharacter(name, value)\r\n                  }}\r\n                />\r\n                <textarea\r\n                  value={character.attacksText ? character.attacksText : ''}\r\n                  onChange={(e) =>\r\n                    this.updateCharacter('attacksText', e.target.value)\r\n                  }\r\n                  rows={6}\r\n                />\r\n                <label className='d-and-d-title' style={{ marginTop: '10px' }}>\r\n                  Атаки и заклинания\r\n                </label>\r\n              </div>\r\n\r\n              <div className='d-and-d-box mt-4'>\r\n                <div className='row'>\r\n                  <div className='' style={{ width: '100px' }}>\r\n                    <Currency\r\n                      label='CP'\r\n                      name='ММ'\r\n                      value={character.cp}\r\n                      onChange={(name: string, value: any) => {\r\n                        this.updateCharacter(name, value)\r\n                      }}\r\n                    />\r\n                    <Currency\r\n                      label='SP'\r\n                      name='СМ'\r\n                      value={character.sp}\r\n                      onChange={(name: string, value: any) => {\r\n                        this.updateCharacter(name, value)\r\n                      }}\r\n                    />\r\n                    <Currency\r\n                      label='EP'\r\n                      name='ЭМ'\r\n                      value={character.ep}\r\n                      onChange={(name: string, value: any) => {\r\n                        this.updateCharacter(name, value)\r\n                      }}\r\n                    />\r\n                    <Currency\r\n                      label='GP'\r\n                      name='ЗМ'\r\n                      value={character.gp}\r\n                      onChange={(name: string, value: any) => {\r\n                        this.updateCharacter(name, value)\r\n                      }}\r\n                    />\r\n                    <Currency\r\n                      label='PP'\r\n                      name='ПМ'\r\n                      value={character.pp}\r\n                      onChange={(name: string, value: any) => {\r\n                        this.updateCharacter(name, value)\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <div className='col'>\r\n                    <textarea\r\n                      className='d-and-d-equipment-indent'\r\n                      value={character.equipment ? character.equipment : ''}\r\n                      onChange={(e) =>\r\n                        this.updateCharacter('equipment', e.target.value)\r\n                      }\r\n                      rows={10}\r\n                    />\r\n                  </div>\r\n                  <div className='col-md-12'>\r\n                    <textarea\r\n                      value={character.equipment2 ? character.equipment2 : ''}\r\n                      onChange={(e) =>\r\n                        this.updateCharacter('equipment2', e.target.value)\r\n                      }\r\n                      rows={4}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <label className='d-and-d-title' style={{ marginTop: '10px' }}>\r\n                  Снаряжение\r\n                </label>\r\n              </div>\r\n            </div>\r\n\r\n            <div className='col-md-4'>\r\n              <div\r\n                className='d-and-d-box gray'\r\n                style={{ marginBottom: '17px' }}\r\n              >\r\n                <div\r\n                  className='d-and-d-box white'\r\n                  style={{\r\n                    borderRadius: '8px 8px 0 0',\r\n                    marginBottom: '5px',\r\n                    paddingTop: '1px',\r\n                    paddingBottom: '5px'\r\n                  }}\r\n                >\r\n                  <textarea\r\n                    value={\r\n                      character.personalityTraits\r\n                        ? character.personalityTraits\r\n                        : ''\r\n                    }\r\n                    onChange={(e) =>\r\n                      this.updateCharacter('personalityTraits', e.target.value)\r\n                    }\r\n                    rows={3}\r\n                  />\r\n                  <label className='d-and-d-title'>Черты характера</label>\r\n                </div>\r\n                <div\r\n                  className='d-and-d-box white'\r\n                  style={{\r\n                    borderRadius: '0 0 0 0',\r\n                    marginBottom: '5px',\r\n                    paddingTop: '1px',\r\n                    paddingBottom: '5px'\r\n                  }}\r\n                >\r\n                  <textarea\r\n                    value={character.ideals ? character.ideals : ''}\r\n                    onChange={(e) =>\r\n                      this.updateCharacter('ideals', e.target.value)\r\n                    }\r\n                    rows={3}\r\n                  />\r\n                  <label className='d-and-d-title'>Идеалы</label>\r\n                </div>\r\n                <div\r\n                  className='d-and-d-box white'\r\n                  style={{\r\n                    borderRadius: '0 0 0 0',\r\n                    marginBottom: '5px',\r\n                    paddingTop: '1px',\r\n                    paddingBottom: '5px'\r\n                  }}\r\n                >\r\n                  <textarea\r\n                    value={character.bonds ? character.bonds : ''}\r\n                    onChange={(e) =>\r\n                      this.updateCharacter('bonds', e.target.value)\r\n                    }\r\n                    rows={2}\r\n                  />\r\n                  <label className='d-and-d-title'>Привязанности</label>\r\n                </div>\r\n                <div\r\n                  className='d-and-d-box white'\r\n                  style={{\r\n                    borderRadius: '0 0 8px 8px',\r\n                    marginBottom: '0px',\r\n                    paddingTop: '1px',\r\n                    paddingBottom: '4px'\r\n                  }}\r\n                >\r\n                  <textarea\r\n                    value={character.flaws ? character.flaws : ''}\r\n                    onChange={(e) =>\r\n                      this.updateCharacter('flaws', e.target.value)\r\n                    }\r\n                    rows={2}\r\n                  />\r\n                  <label className='d-and-d-title'>Слабости</label>\r\n                </div>\r\n              </div>\r\n              <div className='d-and-d-box mt-3'>\r\n                <textarea\r\n                  style={{ paddingBottom: '5px' }}\r\n                  value={\r\n                    character.featuresTraits ? character.featuresTraits : ''\r\n                  }\r\n                  onChange={(e) =>\r\n                    this.updateCharacter('featuresTraits', e.target.value)\r\n                  }\r\n                  rows={27}\r\n                />\r\n                <label className='d-and-d-title' style={{ marginTop: '10px' }}>\r\n                  Умения и особенности\r\n                </label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default DnDCharacterStatsSheet\r\n","import React from 'react'\r\n\r\nfunction Image(props: {\r\n  classes?: string\r\n  value: any\r\n  onChange: (arg0: any, arg1: string) => void\r\n  name: any\r\n}) {\r\n  function importImage(event: any) {\r\n    console.log(event)\r\n    if (event.target.files.length > 0) {\r\n      console.log(event.target.files)\r\n      if (event.target.files[0].size > 2000000) {\r\n        window.alert(\r\n          'Image is too large. Max size is 2 Mb. Please reduce the size and upload again.'\r\n        )\r\n        return\r\n      }\r\n\r\n      var fr = new FileReader()\r\n\r\n      fr.onload = function (e) {\r\n        if (\r\n          e.target &&\r\n          e.target.result &&\r\n          typeof e.target.result === 'string'\r\n        ) {\r\n          props.onChange(props.name, e.target.result)\r\n        }\r\n      }\r\n\r\n      fr.readAsDataURL(event.target.files[0])\r\n    }\r\n  }\r\n\r\n  let classes = 'd-and-d-image'\r\n  if (props.classes) {\r\n    classes += ' ' + props.classes\r\n  }\r\n\r\n  const elementId = 'd-and-d-image-' + props.name\r\n\r\n  return (\r\n    <div\r\n      className={classes}\r\n      style={{\r\n        backgroundImage: props.value ? 'url(' + props.value + ')' : ''\r\n      }}\r\n      onClick={() => document.getElementById(elementId)?.click()}\r\n    >\r\n      <input\r\n        style={{ display: 'none' }}\r\n        type='file'\r\n        id={elementId}\r\n        accept='image/*'\r\n        onChange={(e) => importImage(e)}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Image\r\n","/* eslint-disable prettier/prettier */\r\nimport React from 'react'\r\n\r\n// eslint-disable-next-line no-unused-vars\r\nimport DnDCharacter from './DnDCharacter'\r\n\r\nimport StatRow from './Components/StatRow'\r\nimport Image from './Components/Image'\r\n\r\nimport './dndstyles.css'\r\n\r\ninterface IDnDCharacterProfileSheetProps {\r\n  character?: DnDCharacter\r\n  defaultCharacter?: DnDCharacter\r\n  onCharacterChanged?: (\r\n    character: DnDCharacter,\r\n    changedField: string,\r\n    newValue: any\r\n  ) => void\r\n}\r\n\r\ninterface IDnDCharacterProfileSheetState {\r\n  character: DnDCharacter\r\n}\r\n\r\nconst initialState: IDnDCharacterProfileSheetState = {\r\n  character: {}\r\n}\r\n\r\nclass DnDCharacterProfileSheet extends React.Component<\r\n  IDnDCharacterProfileSheetProps,\r\n  IDnDCharacterProfileSheetState\r\n> {\r\n  constructor(props: IDnDCharacterProfileSheetProps) {\r\n    super(props)\r\n    if (props.defaultCharacter) {\r\n      initialState.character = props.defaultCharacter\r\n    }\r\n    this.state = initialState\r\n  }\r\n\r\n  updateCharacter(name: string, value: any) {\r\n    const oldCharacter = this.getCharacter()\r\n    const newCharacter: DnDCharacter = {}\r\n    Object.assign(newCharacter, oldCharacter)\r\n    newCharacter[name] = value\r\n\r\n    if (!this.props.character) {\r\n      // NOT CONTROLLED\r\n      this.setState({ character: newCharacter })\r\n    }\r\n\r\n    if (typeof this.props.onCharacterChanged === 'function') {\r\n      this.props.onCharacterChanged(newCharacter, name, value)\r\n    }\r\n  }\r\n\r\n  getCharacter() {\r\n    // NOT CONTROLLED\r\n    let character = this.state.character\r\n    if (this.props.character) {\r\n      // CONTROLLED\r\n      character = this.props.character\r\n    }\r\n    return character\r\n  }\r\n\r\n  render() {\r\n    const character = this.getCharacter()\r\n\r\n    return (\r\n      <div className='d-and-d-character-sheet container-xl mt-5 mb-5'>\r\n        <div>\r\n          <div className='row mb-4'>\r\n            <div className='col-md-3 pr-2 pl-2'>\r\n              <div className='d-and-d-page-title'>D&D</div>\r\n              <div className='d-and-d-attribute-collection char-name pr-3 pl-3'>\r\n                <input\r\n                  type='text'\r\n                  value={character.name ? character.name : ''}\r\n                  onChange={(e) => this.updateCharacter('name', e.target.value)}\r\n                />\r\n              </div>\r\n              <label\r\n                style={{\r\n                  width: '100%',\r\n                  textAlign: 'right',\r\n                  textTransform: 'uppercase',\r\n                  fontSize: '11px'\r\n                }}\r\n              >\r\n                Имя персонажа\r\n              </label>\r\n            </div>\r\n            <div className='col-md-9 pr-2 pl-2'>\r\n              <div className='d-and-d-attribute-collection pr-3 pl-3'>\r\n                <div className='row pl-3 pr-3'>\r\n                  <div className='col-md-4 col-6 pl-0 pr-0'>\r\n                    <input\r\n                      type='text'\r\n                      value={character.age ? character.age : ''}\r\n                      onChange={(e) =>\r\n                        this.updateCharacter('age', e.target.value)\r\n                      }\r\n                    />\r\n                    <label>Возраст</label>\r\n                  </div>\r\n                  <div className='col-md-4 col-6 pl-0 pr-0'>\r\n                    <input\r\n                      type='text'\r\n                      value={character.height ? character.height : ''}\r\n                      onChange={(e) =>\r\n                        this.updateCharacter('height', e.target.value)\r\n                      }\r\n                    />\r\n                    <label>Рост</label>\r\n                  </div>\r\n                  <div className='col-md-4 col-6 pl-0 pr-0'>\r\n                    <input\r\n                      type='text'\r\n                      value={character.weight ? character.weight : ''}\r\n                      onChange={(e) =>\r\n                        this.updateCharacter('weight', e.target.value)\r\n                      }\r\n                    />\r\n                    <label>Вес</label>\r\n                  </div>\r\n                </div>\r\n                <div className='row pl-3 pr-3'>\r\n                  <div className='col-md-4 col-6 pl-0 pr-0'>\r\n                    <input\r\n                      type='text'\r\n                      value={character.eyes ? character.eyes : ''}\r\n                      onChange={(e) =>\r\n                        this.updateCharacter('eyes', e.target.value)\r\n                      }\r\n                    />\r\n                    <label>Глаза</label>\r\n                  </div>\r\n                  <div className='col-md-4 col-6 pl-0 pr-0'>\r\n                    <input\r\n                      type='text'\r\n                      value={character.skin ? character.skin : ''}\r\n                      onChange={(e) =>\r\n                        this.updateCharacter('skin', e.target.value)\r\n                      }\r\n                    />\r\n                    <label>Цвет кожи</label>\r\n                  </div>\r\n                  <div className='col-md-4 col-6 pl-0 pr-0'>\r\n                    <input\r\n                      type='text'\r\n                      value={character.hair ? character.hair : ''}\r\n                      onChange={(e) =>\r\n                        this.updateCharacter('hair', e.target.value)\r\n                      }\r\n                    />\r\n                    <label>Волосы</label>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className='row'>\r\n            <div className='col-md-4'>\r\n              <div className='d-and-d-box square'>\r\n                <Image \r\n                  name='appearance'\r\n                  value={character.appearance}\r\n                  onChange={(name: string, value: any) => {\r\n                    this.updateCharacter(name, value)\r\n                  }}\r\n                />\r\n                <label className='d-and-d-title' style={{ marginTop: '10px' }}>\r\n                  Внешний вид\r\n                </label>\r\n              </div>\r\n\r\n              <div className='d-and-d-box mt-3'>\r\n                <textarea\r\n                  style={{ paddingBottom: '5px' }}\r\n                  value={\r\n                    character.backstory ? character.backstory : ''\r\n                  }\r\n                  onChange={(e) =>\r\n                    this.updateCharacter('backstory', e.target.value)\r\n                  }\r\n                  rows={26}\r\n                />\r\n                <label className='d-and-d-title' style={{ marginTop: '10px' }}>\r\n                  Предыстория персонажа\r\n                </label>\r\n              </div>\r\n            </div>\r\n\r\n            <div className='col-md-8'>\r\n              <div className='d-and-d-box'>\r\n                <div className='row'>\r\n                  <div className='col-md-6 border-right'>\r\n                    <div className='d-and-d-gray-text' style={{ paddingBottom: '1px' }}>\r\n                      <label style={{ width: '70px' }}>Звание в фракции</label>\r\n                      <input\r\n                        type='text'\r\n                        style={{ width: 'calc(100% - 70px)' }}\r\n                        className='d-and-d-linput'\r\n                        value={character.factionRank ? character.factionRank : ''}\r\n                        onChange={(e) =>\r\n                          this.updateCharacter('factionRank', e.target.value)\r\n                        }\r\n                      />\r\n                    </div>\r\n\r\n                    <textarea\r\n                      style={{ paddingBottom: '5px' }}\r\n                      value={\r\n                        character.allies ? character.allies : ''\r\n                      }\r\n                      onChange={(e) =>\r\n                        this.updateCharacter('allies', e.target.value)\r\n                      }\r\n                      rows={16}\r\n                    />\r\n                  </div>\r\n                  <div className='col-md-6'>\r\n                    <div className='d-and-d-box gray noborder' style={{marginBottom: '13px'}}>\r\n                      <div className='d-and-d-faction-input'>\r\n                        <label>Фракция</label>\r\n                        <input\r\n                          type='text'\r\n                          value={character.faction ? character.faction : ''}\r\n                          onChange={(e) =>\r\n                            this.updateCharacter('faction', e.target.value)\r\n                          }\r\n                        />\r\n                      </div>\r\n                      <Image \r\n                        classes='faction'\r\n                        name='factionImg'\r\n                        value={character.factionImg}\r\n                        onChange={(name: string, value: any) => {\r\n                          this.updateCharacter(name, value)\r\n                        }}\r\n                      />\r\n                    </div>\r\n\r\n                    <textarea\r\n                      style={{ paddingBottom: '5px' }}\r\n                      value={\r\n                        character.allies2 ? character.allies2 : ''\r\n                      }\r\n                      onChange={(e) =>\r\n                        this.updateCharacter('allies2', e.target.value)\r\n                      }\r\n                      rows={3}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                \r\n                <label className='d-and-d-title' style={{ marginTop: '10px' }}>\r\n                  Союзники\r\n                </label>\r\n              </div>\r\n              \r\n              <div className='d-and-d-box mt-3'>\r\n                <div className='row'>\r\n                  <div className='col-md-6 border-right'>\r\n                    <textarea\r\n                      style={{ paddingBottom: '5px' }}\r\n                      value={\r\n                        character.additionalFeatures ? character.additionalFeatures : ''\r\n                      }\r\n                      onChange={(e) =>\r\n                        this.updateCharacter('additionalFeatures', e.target.value)\r\n                      }\r\n                      rows={13}\r\n                    />\r\n                  </div>\r\n                  <div className='col-md-6'>\r\n                    <textarea\r\n                      style={{ paddingBottom: '5px' }}\r\n                      value={\r\n                        character.additionalFeatures2 ? character.additionalFeatures2 : ''\r\n                      }\r\n                      onChange={(e) =>\r\n                        this.updateCharacter('additionalFeatures2', e.target.value)\r\n                      }\r\n                      rows={13}\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                <label className='d-and-d-title' style={{ marginTop: '10px' }}>\r\n                  Дополнительные черты\r\n                </label>\r\n              </div>\r\n\r\n              <div className='d-and-d-box mt-3'>\r\n                <div className='row'>\r\n                  <div className='col-md-6 border-right'>\r\n                    <StatRow\r\n                      classes='m-2 rounded rounded-sides wide-input'\r\n                      label='Всего нерасходуемых магических предметов'\r\n                      name='totalNonConsumableMagicItems'\r\n                      value={character.totalNonConsumableMagicItems}\r\n                      onChange={(name: string, value: any) => {\r\n                        this.updateCharacter(name, value)\r\n                      }}\r\n                    />\r\n\r\n                    <textarea\r\n                      style={{ paddingBottom: '5px', marginTop: '2px' }}\r\n                      value={\r\n                        character.treasure ? character.treasure : ''\r\n                      }\r\n                      onChange={(e) =>\r\n                        this.updateCharacter('treasure', e.target.value)\r\n                      }\r\n                      rows={8}\r\n                    />\r\n                  </div>\r\n                  <div className='col-md-6'>\r\n                    <textarea\r\n                      style={{ paddingBottom: '5px', marginTop: '4px' }}\r\n                      value={\r\n                        character.treasure2 ? character.treasure2 : ''\r\n                      }\r\n                      onChange={(e) =>\r\n                        this.updateCharacter('treasure2', e.target.value)\r\n                      }\r\n                      rows={10}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                \r\n                <label className='d-and-d-title' style={{ marginTop: '4px' }}>\r\n                  Сокровища\r\n                </label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default DnDCharacterProfileSheet\r\n","/* eslint-disable prettier/prettier */\r\nimport React from 'react'\r\n\r\nfunction SpellTable(props: {\r\n  onChange: (arg0: any, arg1: any) => void\r\n  name: string\r\n  slotsName?: string\r\n  slotsUsedName?: string\r\n  level: number\r\n  value?: any\r\n  slotsValue?: string\r\n  slotsUsedValue?: number\r\n  classes?: string\r\n  rows: number\r\n  showLabels?: boolean\r\n  style?: React.CSSProperties | undefined\r\n}) {\r\n  function updateValue(index: React.Key, field: string, v: string | boolean) {\r\n    const value = getValue().slice()\r\n    value[index][field] = v\r\n    props.onChange(props.name, value)\r\n  }\r\n\r\n  function getValue() {\r\n    let value = props.value\r\n    if (!value) {\r\n      value = []\r\n    }\r\n    while (value.length < props.rows) {\r\n      value.push({})\r\n    }\r\n    return value\r\n  }\r\n\r\n  function renderSlotsRemaining() {\r\n    let slotCount = 6\r\n    if (props.slotsValue != null && props.slotsValue !== '' && Number(props.slotsValue) != null) {\r\n      slotCount = Number(props.slotsValue)\r\n    }\r\n\r\n    const slots = []\r\n    for (let i1 = 1; i1 <= slotCount; i1++) {\r\n      slots.push(\r\n        <div\r\n          key={'d-and-d-table-slot-' + props.name + i1}\r\n          className={\r\n            props.slotsUsedValue && props.slotsUsedValue >= i1\r\n              ? 'd-and-d-skill-circle active'\r\n              : 'd-and-d-skill-circle'\r\n          }\r\n          onClick={() =>\r\n            props.onChange(\r\n              props.slotsUsedName,\r\n              props.slotsUsedValue === i1 ? null : i1\r\n            )\r\n          }\r\n        />\r\n      )\r\n    }\r\n\r\n    return slots\r\n  }\r\n\r\n  let classes = 'd-and-d-spelllist'\r\n  if (props.classes) {\r\n    classes += ' ' + props.classes\r\n  }\r\n\r\n  return (\r\n    <div className={classes} style={props.style}>\r\n      {props.showLabels ? (\r\n        <div className='d-and-d-spell-header-labels'>\r\n          <label style={{ width: '20px' }}>Уровень заклинаний</label>\r\n          <label style={{ width: '80px' }}>Всего ячеек</label>\r\n          <label style={{ width: 'calc(100% - 100px)' }}>Оставшиеся ячейки</label>\r\n        </div>\r\n      ) : null}\r\n      <div className='d-and-d-spell-header'>\r\n        <div className='d-and-d-spell-level'>{props.level}</div>\r\n        {props.level === 0 ? (\r\n          <div className='d-and-d-spell-slots'>\r\n            <label>Фокусы</label>\r\n          </div>\r\n        ) : (\r\n          <div className='d-and-d-spell-slots'>\r\n            <div className='d-and-d-spell-slots-total'>\r\n              <input\r\n                type='text'\r\n                value={props.slotsValue ? props.slotsValue : ''}\r\n                onChange={(e) =>\r\n                  props.onChange(props.slotsName, e.target.value)\r\n                }\r\n              />\r\n            </div>\r\n            <div className='d-and-d-spell-slots-remaining'>\r\n              {renderSlotsRemaining()}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <table>\r\n        {props.showLabels ? (\r\n          <thead>\r\n            <tr>\r\n              <th style={{ width: '30px', position: 'absolute', left: '-7px' }}>\r\n                Подготовленные\r\n              </th>\r\n              <th>Название заклинания</th>\r\n            </tr>\r\n          </thead>\r\n        ) : null}\r\n        <tbody>\r\n          {getValue().map(\r\n            (\r\n              v: {\r\n                name: string | number | readonly string[] | undefined\r\n                prepared: boolean | undefined\r\n              },\r\n              index: string\r\n            ) => {\r\n              return (\r\n                <tr key={'d-and-d-table-row-' + props.name + index}>\r\n                  {props.level > 0 ? (\r\n                    <td className='d-and-d-spell-prepared'>\r\n                      <div\r\n                        className={\r\n                          v.prepared\r\n                            ? 'd-and-d-skill-circle active'\r\n                            : 'd-and-d-skill-circle'\r\n                        }\r\n                        onClick={() =>\r\n                          updateValue(index, 'prepared', !v.prepared)\r\n                        }\r\n                      />\r\n                    </td>\r\n                  ) : null}\r\n                  <td>\r\n                    <input\r\n                      type='text'\r\n                      value={v.name ? v.name : ''}\r\n                      onChange={(e) =>\r\n                        updateValue(index, 'name', e.target.value)\r\n                      }\r\n                    />\r\n                  </td>\r\n                </tr>\r\n              )\r\n            }\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SpellTable\r\n","import React from 'react'\r\n\r\n// eslint-disable-next-line no-unused-vars\r\nimport DnDCharacter from './DnDCharacter'\r\n\r\nimport StatBox2 from './Components/StatBox2'\r\n\r\nimport './dndstyles.css'\r\nimport SpellTable from './Components/SpellTable'\r\n\r\ninterface IDnDCharacterSpellsSheetProps {\r\n  character?: DnDCharacter\r\n  defaultCharacter?: DnDCharacter\r\n  onCharacterChanged?: (\r\n    character: DnDCharacter,\r\n    changedField: string,\r\n    newValue: any\r\n  ) => void\r\n}\r\n\r\ninterface IDnDCharacterSpellsSheetState {\r\n  character: DnDCharacter\r\n}\r\n\r\nconst initialState: IDnDCharacterSpellsSheetState = {\r\n  character: {}\r\n}\r\n\r\nclass DnDCharacterSpellsSheet extends React.Component<\r\n  IDnDCharacterSpellsSheetProps,\r\n  IDnDCharacterSpellsSheetState\r\n> {\r\n  constructor(props: IDnDCharacterSpellsSheetProps) {\r\n    super(props)\r\n    if (props.defaultCharacter) {\r\n      initialState.character = props.defaultCharacter\r\n    }\r\n    this.state = initialState\r\n  }\r\n\r\n  updateCharacter(name: string, value: any) {\r\n    const oldCharacter = this.getCharacter()\r\n    const newCharacter: DnDCharacter = {}\r\n    Object.assign(newCharacter, oldCharacter)\r\n    newCharacter[name] = value\r\n\r\n    if (!this.props.character) {\r\n      // NOT CONTROLLED\r\n      this.setState({ character: newCharacter })\r\n    }\r\n\r\n    if (typeof this.props.onCharacterChanged === 'function') {\r\n      this.props.onCharacterChanged(newCharacter, name, value)\r\n    }\r\n  }\r\n\r\n  getCharacter() {\r\n    // NOT CONTROLLED\r\n    let character = this.state.character\r\n    if (this.props.character) {\r\n      // CONTROLLED\r\n      character = this.props.character\r\n    }\r\n    return character\r\n  }\r\n\r\n  render() {\r\n    const character = this.getCharacter()\r\n\r\n    return (\r\n      <div className='d-and-d-character-sheet container-xl mt-5 mb-5'>\r\n        <div>\r\n          <div className='row mb-4'>\r\n            <div className='col-md-3 pr-2 pl-2'>\r\n              <div className='d-and-d-page-title'>D&D</div>\r\n              <div className='d-and-d-attribute-collection char-name pr-3 pl-3'>\r\n                <input\r\n                  type='text'\r\n                  value={\r\n                    character.spellcastingClass\r\n                      ? character.spellcastingClass\r\n                      : ''\r\n                  }\r\n                  onChange={(e) =>\r\n                    this.updateCharacter('spellcastingClass', e.target.value)\r\n                  }\r\n                />\r\n              </div>\r\n              <label\r\n                style={{\r\n                  width: '100%',\r\n                  textAlign: 'right',\r\n                  textTransform: 'uppercase',\r\n                  fontSize: '11px'\r\n                }}\r\n              >\r\n                Класс заклинаний/способностей\r\n              </label>\r\n            </div>\r\n            <div className='col-md-9 pr-2 pl-2' style={{ marginTop: '18px' }}>\r\n              <div className='d-and-d-attribute-collection gray pr-3 pl-3'>\r\n                <div className='row pl-3 pr-3'>\r\n                  <div className='col-4 pr-4 pl-4'>\r\n                    <StatBox2\r\n                      name='preparedSpellsTotal'\r\n                      value={character.preparedSpellsTotal}\r\n                      onChange={(name: string, value: any) => {\r\n                        this.updateCharacter(name, value)\r\n                      }}\r\n                    />\r\n                    <label\r\n                      style={{\r\n                        textTransform: 'none',\r\n                        width: '100%',\r\n                        textAlign: 'center',\r\n                        marginBottom: '0'\r\n                      }}\r\n                    >\r\n                      Всего подготовленных\r\n                    </label>\r\n                    <label\r\n                      style={{\r\n                        textTransform: 'none',\r\n                        width: '100%',\r\n                        textAlign: 'center',\r\n                        marginBottom: '0'\r\n                      }}\r\n                    >\r\n                      заклинаний\r\n                    </label>\r\n                  </div>\r\n                  <div className='col-4 pr-4 pl-4'>\r\n                    <StatBox2\r\n                      name='spellSaveDC'\r\n                      value={character.spellSaveDC}\r\n                      onChange={(name: string, value: any) => {\r\n                        this.updateCharacter(name, value)\r\n                      }}\r\n                    />\r\n                    <label\r\n                      style={{\r\n                        textTransform: 'none',\r\n                        width: '100%',\r\n                        textAlign: 'center',\r\n                        marginBottom: '0'\r\n                      }}\r\n                    >\r\n                      Спасбросок против заклинаний\r\n                    </label>\r\n                  </div>\r\n                  <div className='col-4 pr-4 pl-4'>\r\n                    <StatBox2\r\n                      name='spellAttackBonus'\r\n                      value={character.spellAttackBonus}\r\n                      onChange={(name: string, value: any) => {\r\n                        this.updateCharacter(name, value)\r\n                      }}\r\n                    />\r\n                    <label\r\n                      style={{\r\n                        textTransform: 'none',\r\n                        width: '100%',\r\n                        textAlign: 'center',\r\n                        marginBottom: '0'\r\n                      }}\r\n                    >\r\n                      Бонус атаки\r\n                    </label>\r\n                    <label\r\n                      style={{\r\n                        textTransform: 'none',\r\n                        width: '100%',\r\n                        textAlign: 'center',\r\n                        marginBottom: '0'\r\n                      }}\r\n                    >\r\n                      заклинаний\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className='row'>\r\n            <div className='col-md-4'>\r\n              <div className='d-and-d-box'>\r\n                <SpellTable\r\n                  level={0}\r\n                  rows={9}\r\n                  name='cantrips'\r\n                  value={character.cantrips}\r\n                  onChange={(name: string, value: any) => {\r\n                    this.updateCharacter(name, value)\r\n                  }}\r\n                  style={{ marginBottom: '23px' }}\r\n                />\r\n                <SpellTable\r\n                  level={1}\r\n                  rows={12}\r\n                  showLabels\r\n                  name='lvl1Spells'\r\n                  slotsName='lvl1SpellSlotsTotal'\r\n                  slotsUsedName='lvl1SpellSlotsUsed'\r\n                  value={character.lvl1Spells}\r\n                  slotsValue={character.lvl1SpellSlotsTotal}\r\n                  slotsUsedValue={character.lvl1SpellSlotsUsed}\r\n                  onChange={(name: string, value: any) => {\r\n                    this.updateCharacter(name, value)\r\n                  }}\r\n                />\r\n                <SpellTable\r\n                  level={2}\r\n                  rows={13}\r\n                  name='lvl2Spells'\r\n                  slotsName='lvl2SpellSlotsTotal'\r\n                  slotsUsedName='lvl2SpellSlotsUsed'\r\n                  value={character.lvl2Spells}\r\n                  slotsValue={character.lvl2SpellSlotsTotal}\r\n                  slotsUsedValue={character.lvl2SpellSlotsUsed}\r\n                  onChange={(name: string, value: any) => {\r\n                    this.updateCharacter(name, value)\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className='col-md-4'>\r\n              <div className='d-and-d-box'>\r\n                <SpellTable\r\n                  level={3}\r\n                  rows={13}\r\n                  name='lvl3Spells'\r\n                  slotsName='lvl3SpellSlotsTotal'\r\n                  slotsUsedName='lvl3SpellSlotsUsed'\r\n                  value={character.lvl3Spells}\r\n                  slotsValue={character.lvl3SpellSlotsTotal}\r\n                  slotsUsedValue={character.lvl3SpellSlotsUsed}\r\n                  onChange={(name: string, value: any) => {\r\n                    this.updateCharacter(name, value)\r\n                  }}\r\n                />\r\n                <SpellTable\r\n                  level={4}\r\n                  rows={13}\r\n                  name='lvl4Spells'\r\n                  slotsName='lvl4SpellSlotsTotal'\r\n                  slotsUsedName='lvl4SpellSlotsUsed'\r\n                  value={character.lvl4Spells}\r\n                  slotsValue={character.lvl4SpellSlotsTotal}\r\n                  slotsUsedValue={character.lvl4SpellSlotsUsed}\r\n                  onChange={(name: string, value: any) => {\r\n                    this.updateCharacter(name, value)\r\n                  }}\r\n                />\r\n                <SpellTable\r\n                  level={5}\r\n                  rows={9}\r\n                  name='lvl5Spells'\r\n                  slotsName='lvl5SpellSlotsTotal'\r\n                  slotsUsedName='lvl5SpellSlotsUsed'\r\n                  value={character.lvl5Spells}\r\n                  slotsValue={character.lvl5SpellSlotsTotal}\r\n                  slotsUsedValue={character.lvl5SpellSlotsUsed}\r\n                  onChange={(name: string, value: any) => {\r\n                    this.updateCharacter(name, value)\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className='col-md-4'>\r\n              <div className='d-and-d-box'>\r\n                <SpellTable\r\n                  level={6}\r\n                  rows={9}\r\n                  name='lvl6Spells'\r\n                  slotsName='lvl6SpellSlotsTotal'\r\n                  slotsUsedName='lvl6SpellSlotsUsed'\r\n                  value={character.lvl6Spells}\r\n                  slotsValue={character.lvl6SpellSlotsTotal}\r\n                  slotsUsedValue={character.lvl6SpellSlotsUsed}\r\n                  onChange={(name: string, value: any) => {\r\n                    this.updateCharacter(name, value)\r\n                  }}\r\n                />\r\n                <SpellTable\r\n                  level={7}\r\n                  rows={9}\r\n                  name='lvl7Spells'\r\n                  slotsName='lvl7SpellSlotsTotal'\r\n                  slotsUsedName='lvl7SpellSlotsUsed'\r\n                  value={character.lvl7Spells}\r\n                  slotsValue={character.lvl7SpellSlotsTotal}\r\n                  slotsUsedValue={character.lvl7SpellSlotsUsed}\r\n                  onChange={(name: string, value: any) => {\r\n                    this.updateCharacter(name, value)\r\n                  }}\r\n                />\r\n                <SpellTable\r\n                  level={8}\r\n                  rows={7}\r\n                  name='lvl8Spells'\r\n                  slotsName='lvl8SpellSlotsTotal'\r\n                  slotsUsedName='lvl8SpellSlotsUsed'\r\n                  value={character.lvl8Spells}\r\n                  slotsValue={character.lvl8SpellSlotsTotal}\r\n                  slotsUsedValue={character.lvl8SpellSlotsUsed}\r\n                  onChange={(name: string, value: any) => {\r\n                    this.updateCharacter(name, value)\r\n                  }}\r\n                />\r\n                <SpellTable\r\n                  level={9}\r\n                  rows={7}\r\n                  name='lvl9Spells'\r\n                  slotsName='lvl9SpellSlotsTotal'\r\n                  slotsUsedName='lvl9SpellSlotsUsed'\r\n                  value={character.lvl9Spells}\r\n                  slotsValue={character.lvl9SpellSlotsTotal}\r\n                  slotsUsedValue={character.lvl9SpellSlotsUsed}\r\n                  onChange={(name: string, value: any) => {\r\n                    this.updateCharacter(name, value)\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default DnDCharacterSpellsSheet\r\n","import React, { useState, useEffect } from 'react'\r\nimport {\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  withRouter,\r\n  Redirect,\r\n  useLocation\r\n} from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport qs from 'qs'\r\n\r\nimport { DnDCharacterStatsSheet, DnDCharacterProfileSheet, DnDCharacterSpellSheet, DnDCharacter } from 'dnd-character-sheets'\r\nimport 'dnd-character-sheets/dist/index.css'\r\n\r\nfunction ScrollToTop() {\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  return null;\r\n}\r\n\r\nconst App = (props: any) => {\r\n  const [character, setCharacter] = useState<DnDCharacter>(loadDefaultCharacter())\r\n  const [navTop, setNavTop] = useState<number>(0)\r\n  const [prevScrollpos, setPrevScrollpos] = useState<number>(window.pageYOffset)\r\n  const [, setLoading] = useState<boolean>(false)\r\n\r\n  const { search } = useLocation();\r\n  useEffect(() => {\r\n    const characterToLoad = qs.parse(search, { ignoreQueryPrefix: true }).character\r\n    if (characterToLoad) {\r\n      setLoading(true)\r\n      axios\r\n        .get('characters/' + characterToLoad + '.json')\r\n        .then((response: any) => {\r\n          setLoading(false)\r\n          try {\r\n            if (!Array.isArray(response.data) && typeof response.data === 'object') {\r\n              console.log('Loaded Character - ' + characterToLoad)\r\n              updateCharacter(response.data)\r\n            } else {\r\n              throw new Error('Json file does not contain a DnD character.')\r\n            }\r\n          }\r\n          catch {\r\n            throw new Error('Json file does not contain a DnD character.')\r\n          }\r\n        })\r\n        .catch((error: any) => {\r\n          console.log('Failed to load Character - ' + characterToLoad)\r\n          console.log(error)\r\n          setLoading(false)\r\n        })\r\n    }\r\n  }, [search]);\r\n\r\n  const statsSheet = (\r\n    <DnDCharacterStatsSheet\r\n      character={character}\r\n      onCharacterChanged={updateCharacter}\r\n    />\r\n  )\r\n  const profileSheet = (\r\n    <DnDCharacterProfileSheet\r\n      character={character}\r\n      onCharacterChanged={updateCharacter}\r\n    />\r\n  )\r\n  const spellSheet = (\r\n    <DnDCharacterSpellSheet\r\n      character={character}\r\n      onCharacterChanged={updateCharacter}\r\n    />\r\n  )\r\n\r\n  window.onscroll = function() {onScroll()};\r\n  function onScroll() {\r\n    var currentScrollPos = window.pageYOffset;\r\n    if (prevScrollpos > currentScrollPos || currentScrollPos < 20) {\r\n      setNavTop(0)\r\n    } else {\r\n      setNavTop(-280);\r\n    }\r\n    setPrevScrollpos(currentScrollPos)\r\n  }\r\n\r\n  function loadDefaultCharacter () {\r\n    let character: DnDCharacter = {}\r\n    const lsData = localStorage.getItem('dnd-character-data')\r\n    if (lsData) {\r\n      try {\r\n        character = JSON.parse(lsData)\r\n      } catch {}\r\n    }\r\n    return character\r\n  }\r\n\r\n  function updateCharacter (character: DnDCharacter) {\r\n    setCharacter(character)\r\n    localStorage.setItem('dnd-character-data', JSON.stringify(character))\r\n  }\r\n\r\n  function exportCharacter () {\r\n    const json = JSON.stringify(character, null, 2)\r\n\r\n    var a = document.createElement('a');\r\n    var file = new Blob([json], {type: 'application/json'});\r\n    a.href = URL.createObjectURL(file);\r\n    a.download = character.name ? character.name.replace(/[^a-z0-9]/gi, '_').toLowerCase() + '.json' : 'dnd-character.json';\r\n    a.click();\r\n  }\r\n\r\n\r\n  function importCharacter (event: any) {\r\n    if (event.target.files.length > 0){\r\n      var fr = new FileReader();\r\n\r\n      fr.onload = function(e) { \r\n        if (e.target && e.target.result && typeof e.target.result === 'string') {\r\n          loadCharacter(e.target.result)\r\n        }\r\n      }\r\n    \r\n      fr.readAsText(event.target.files[0]);\r\n    }\r\n  }\r\n\r\n  function loadCharacter(json: string) {\r\n    try {\r\n      var result = JSON.parse(typeof json === 'string' ? json : '{}');\r\n      if (!Array.isArray(result) && typeof result === 'object') {\r\n        updateCharacter(result)\r\n      } else {\r\n        window.alert('Json file does not contain a DnD character.')\r\n      }\r\n    }\r\n    catch {\r\n      window.alert('Json file does not contain a DnD character.')\r\n    }\r\n  }\r\n\r\n  function clearCharacter() {\r\n    updateCharacter({ })\r\n  }\r\n\r\n  function getDefaultRedirect(search: string | undefined) {\r\n    let defaultRedirect = '/stats' + search\r\n    if (window.innerWidth < 992) { \r\n      // is mobile device\r\n      defaultRedirect = '/all' + search\r\n    }\r\n    return defaultRedirect\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <nav className='navbar navbar-expand-lg navbar-dark fixed-top' style={{ backgroundColor: 'rgb(204, 10, 33)', top: navTop === 0 ? '' : navTop + 'px' }}>\r\n          <button className='navbar-toggler' type='button' data-toggle='collapse' data-target='#navbarSupportedContent' aria-controls='navbarSupportedContent' aria-expanded='false' aria-label='Toggle navigation'>\r\n              <span className='navbar-toggler-icon'></span>\r\n          </button>\r\n          <div style={{width:'100%'}}>\r\n            <div className='collapse navbar-collapse' id='navbarSupportedContent'>\r\n                <ul className='navbar-nav ml-lg-5' data-toggle='collapse' data-target='.navbar-collapse.show'>\r\n                    <li className='nav-item mr-lg-3'>\r\n                        <Link className={props.location.pathname === '/stats' ? 'nav-link active' : 'nav-link'} to='/stats'>Stats</Link>\r\n                    </li>\r\n                    <li className='nav-item mr-lg-3'>\r\n                        <Link className={props.location.pathname === '/profile' ? 'nav-link active' : 'nav-link'} to='/profile'>Profile</Link>\r\n                    </li>\r\n                    <li className='nav-item mr-lg-3'>\r\n                        <Link className={props.location.pathname === '/spells' ? 'nav-link active' : 'nav-link'} to='/spells'>Spells</Link>\r\n                    </li>\r\n                    <li className='nav-item mr-lg-3'>\r\n                        <Link className={props.location.pathname === '/all' ? 'nav-link active' : 'nav-link'} to='/all'>All</Link>\r\n                    </li>\r\n                </ul>\r\n\r\n                <ul className='navbar-nav ml-auto mr-lg-5' data-toggle='collapse' data-target='.navbar-collapse.show'>\r\n                    <li className='nav-item mr-lg-3'>\r\n                        <button className='btn btn-dark' onClick={() => exportCharacter()}>Export</button>\r\n                        <input style={{display: 'none'}} type=\"file\" id=\"selectFiles\" accept=\"application/json\" onChange={(e) => importCharacter(e)} />\r\n                        <button className='btn btn-dark' onClick={() => document.getElementById(\"selectFiles\")?.click()}>Import</button>\r\n                        <button className='btn btn-dark' onClick={() => window.print()}>Print</button>\r\n                        <button className='btn btn-danger' onClick={() => clearCharacter()}>Clear</button>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n          </div>\r\n      </nav>\r\n      <div className='app-holder'>\r\n\r\n        <Switch>\r\n          <Route exact path='/'>\r\n            <ScrollToTop />\r\n            <Redirect to={getDefaultRedirect(search)} />\r\n          </Route>\r\n          <Route exact path='/stats'>\r\n            <ScrollToTop />\r\n            {statsSheet}\r\n          </Route>\r\n          <Route exact path='/profile'>\r\n            <ScrollToTop />\r\n            {profileSheet}\r\n          </Route>\r\n          <Route exact path='/spells'>\r\n            <ScrollToTop />\r\n            {spellSheet}\r\n          </Route>\r\n          <Route exact path='/all'>\r\n            <ScrollToTop />\r\n            {statsSheet}\r\n            <div className='page-break' />\r\n            <div className='page-space' />\r\n            {profileSheet}\r\n            <div className='page-break' />\r\n            <div className='page-space' />\r\n            {spellSheet}\r\n          </Route>\r\n        </Switch>\r\n        \r\n\r\n      </div>\r\n      <footer className=\"no-print page-footer font-small text-white pt-4\" style={{ backgroundColor: 'rgb(211, 49, 21)' }}>\r\n        <div className=\"container-fluid container-xl text-center text-md-left mt-2 mb-3\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6 mt-md-0 mt-3\">\r\n                <h5>DnD Character Sheets</h5>\r\n                <p>This page was created using dnd-character-sheets, an open source ReactJs library created by Daryl Buckle.</p>\r\n              </div>\r\n              <hr className=\"clearfix w-100 d-md-none pb-3\" />\r\n              <div className=\"col-md-3 mb-md-0 mb-3\">\r\n                <h5>Links</h5>\r\n                <ul className=\"list-unstyled\">\r\n                  <li>\r\n                    <a href=\"https://github.com/darylbuckle/dnd-character-sheets\">Source Code</a>\r\n                  </li>\r\n                  <li>\r\n                    <a href=\"https://www.npmjs.com/package/dnd-character-sheets\">Npm</a>\r\n                  </li>\r\n                  <li>\r\n                    <a href=\"https://github.com/darylbuckle\">Daryl Buckle</a>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n              <div className=\"col-md-3 mb-md-0 mb-3\">\r\n                <h5>Related</h5>\r\n                <ul className=\"list-unstyled\">\r\n                  <li>\r\n                    <a href=\"https://darylbuckle.github.io/espergen-character-sheets\">Esper Genesis Character Sheets</a>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        <div className=\"footer-copyright text-center mt-5 py-2 text-white small\" style={{ backgroundColor: 'rgb(204, 10, 33)' }}>\r\n          MIT © Daryl Buckle 2020\r\n        </div>\r\n      </footer>\r\n    </div>\r\n    \r\n  )\r\n}\r\n\r\nexport default withRouter(App)\r\n","import './index.css'\r\n\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport { BrowserRouter as Router} from 'react-router-dom';\r\n\r\nReactDOM.render(<Router basename={'dnd-character-sheets'}><App /></Router>, document.getElementById('root'))"],"sourceRoot":""}